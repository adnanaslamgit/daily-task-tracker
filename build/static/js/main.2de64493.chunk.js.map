{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultPropTypes","Header","title","onAdd","showAdd","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","value","placeholder","onChange","target","checked","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2de64493.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport PropTypes from 'prop-types';\nconst Button = ({color, text, onClick}) => {\n\n    return (\n        <button onClick={onClick} style={{backgroundColor:color}} className='btn'>\n            {text}\n        </button>\n    )\n}\n\nButton.defaultPropTypes = {\n    color: 'yellow'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default Button\n","/* eslint-disable no-unused-vars */\n\nimport PropTypes from 'prop-types';\nimport Button from './Button';\n\nconst Header = ({title, onAdd, showAdd}) => {\n\n\n   return(\n       <header className='header'>\n           <h1>{title}</h1>\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\n       </header>\n   ) \n}\n\nHeader.defaultProps ={\n    title : 'Task Tracker'\n}\n\nHeader.propTypes = {\n    title : PropTypes.string.isRequired\n}\n\n\n// const headingStyle = {\n//     color: 'red',\n//     backgroundColor: '#000000'\n// }\n\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder'  : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text} <FaTimes style={{color: 'red', cursor:'pointer'}} onClick={() => onDelete(task.id)} /></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task';\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n        <>\n        {tasks.map((task)=> (\n        <Task key={task.id} task={task} onDelete={onDelete} onToggle={ onToggle }/>\n        ))}\n        </>\n    )\n}\n\nexport default Tasks","import { useState } from \"react\";\n\nconst AddTask = ({onAdd}) => {\n\n    const [text, setText] = useState('');\n    const [day, setDay] = useState(\"\");\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(!text){\n            alert(\"Please Add Task\");\n            return\n        }\n\n        onAdd({text, day, reminder})\n\n        setText(\"\")\n        setDay(\"\")\n        setReminder(false)\n    }\n\n    return (\n        <div>\n            <form className=\"form\" onSubmit= {onSubmit}>\n                <div className='form-control'>\n                    <label>Task</label>\n                    <input type=\"text\" value={text} placeholder=\"Add Task\" onChange={(e) => setText(e.target.value)} />\n                </div>\n                <div className='form-control'>\n                    <label>Day &amp; Time</label>\n                    <input type=\"text\" value={day} placeholder=\"Add Day &amp; Time\" onChange={(e) => setDay(e.target.value)} />\n                </div>\n                <div className='form-control form-control-check'>\n                    <label>Set Reminder</label>\n                    <input type=\"checkbox\" \n                    value={reminder}\n                    checked = { reminder}\n                    onChange={(e) => setReminder(e.target.checked)} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\" />\n            </form>\n        </div>\n    )\n}\n\nexport default AddTask\n","import Header  from './components/Header';\nimport Tasks  from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\"\nimport { useState } from \"react\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState(\n    [\n        {\n            id:1,\n            text: 'Doctors Appointment',\n            day: 'March 1 at 2:30pm',\n            reminder: true\n        },\n        {\n            id:2,\n            text: 'Doctors Appointment',\n            day: 'March 1 at 2:30pm',\n            reminder: true\n        },\n        {\n            id:3,\n            text: 'Doctors Appointment',\n            day: 'March 1 at 2:30pm',\n            reminder: true\n        },\n        {\n            id:4,\n            text: 'Doctors Appointment',\n            day: 'March 1 at 2:30pm',\n            reminder: false\n        }\n    ]\n)\n\n//Add Task\nconst addTask = (task) => {\n const id = Math.floor(Math.random() * 10000) + 1\n\n const newTask = { id, ...task}\n setTasks([...tasks, newTask])\n}\n\n//Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task ))\n}\n\n  return (\n    <div className=\"container\">\n      <Header onAdd= {() =>  setShowAddTask(!showAddTask)} showAdd = {showAddTask }/>\n\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={ deleteTask } onToggle = {toggleReminder}/> : 'No Task to show'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}